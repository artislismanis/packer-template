# Clean up build time log from the last run
if (Test-Path $($PSScriptRoot + "\logs\build-times.log")) 
{
  Remove-Item $($PSScriptRoot + "\logs\build-times.log")
}

# Scenario 1 - Ubuntu Server Base Box - standard vagrant user
"ubuntu-base-vagrant.ps1" >> $($PSScriptRoot + "\logs\build-times.log")
invoke-expression -Command $($PSScriptRoot + "\ubuntu-base-vagrant.ps1")

# Scenario 2 - Ubuntu Server Base Box - custom user details, autogenerated secrets
"ubuntu-base-alt.ps1" >> $($PSScriptRoot + "\logs\build-times.log")
invoke-expression -Command $($PSScriptRoot + "\ubuntu-base-alt.ps1")

# Scenario 3 - Lubuntu Box - standard vagrant user
#"lubuntu-vagrant.ps1" >> $($PSScriptRoot + "\logs\build-times.log")
#invoke-expression -Command $($PSScriptRoot + "\lubuntu-vagrant.ps1")

# Scenario 4 - Lubuntu Box - custom user details, autogenerated secrets
#"lubuntu-alt.ps1" >> $($PSScriptRoot + "\logs\build-times.log")
#invoke-expression -Command $($PSScriptRoot + "\lubuntu-alt.ps1")

# Scenario 5 - Lubuntu Box - standard vagrant user + push to Vagrant Cloud
# Provide Vagrant Cloud token in $env:VC_TOKEN variable
#"lubuntu-vagrant-cloud.ps1" >> $($PSScriptRoot + "\logs\build-times.log")
#invoke-expression -Command $($PSScriptRoot + "\lubuntu-vagrant-cloud.ps1")

# Add all built boxes to Vagrant for testing
invoke-expression -Command $($PSScriptRoot + "\add-all-to-vagrant.ps1")
